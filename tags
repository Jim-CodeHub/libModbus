!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
BOOL	tst/port.h	/^typedef char									BOOL;										$/;"	t
CC	tst/Makefile	/^CC 		    = avr-gcc$/;"	m
CFLAGS	tst/Makefile	/^CFLAGS 		= -mmcu=$(MCU) -Werror -Os -std=c99 -D F_CPU=$(F_CPU)$/;"	m
CHAR	tst/port.h	/^typedef char									CHAR;$/;"	t
ENTER_CRITICAL	tst/port.c	/^void ENTER_CRITICAL( void )	{_SREG = SREG; __asm__ volatile("cli");}$/;"	f
EXIT_CRITICAL	tst/port.c	/^void EXIT_CRITICAL( void )	{SREG = _SREG;}	$/;"	f
E_FUSE_BIT	tst/Makefile	/^E_FUSE_BIT 	= 0XFF #0XD4$/;"	m
FALSE	tst/port.h	55;"	d
F_CPU	tst/Makefile	/^F_CPU 		= 16000000UL$/;"	m
H_FUSE_BIT	tst/Makefile	/^H_FUSE_BIT 	= 0XC9 #0XC1$/;"	m
INLINE	tst/port.h	38;"	d
ISR	tst/serial.c	/^ISR(USART1_RX_vect)$/;"	f
ISR	tst/serial.c	/^ISR(USART1_UDRE_vect) \/**< Use UDRE IE instead of TX IE (USART1_TX_vect) to speed up trans *\/$/;"	f
ISR	tst/timer.c	/^ISR(TIMER3_OVF_vect)$/;"	f
LDFLAGS	tst/Makefile	/^LDFLAGS 	= -mmcu=$(MCU) -Wl,-Map=$(TARGET).map$/;"	m
LONG	tst/port.h	/^typedef long									LONG;$/;"	t
L_FUSE_BIT	tst/Makefile	/^L_FUSE_BIT 	= 0X2E$/;"	m
MB_PORT_TIMERT35_DISABLE	tst/port.h	25;"	d
MB_PORT_TIMERT35_ENABLE	tst/port.h	26;"	d
MCU	tst/Makefile	/^MCU 		= atmega128$/;"	m
MJR_VER	tst/Makefile	/^MJR_VER		= V1.0$/;"	m
OBJCOPY	tst/Makefile	/^OBJCOPY 	= avr-objcopy$/;"	m
OBJDUMP	tst/Makefile	/^OBJDUMP 	= avr-objdump$/;"	m
OBJS	tst/Makefile	/^OBJS		= main.o$/;"	m
OS_ATOMIC_OPERATION	modbcd/util/mbox.h	33;"	d
PROGRAMMER	tst/Makefile	/^PROGRAMMER 	= usbasp$/;"	m
PROJECT	tst/Makefile	/^PROJECT		= modbcd_tst$/;"	m
PR_BEGIN_EXTERN_C	tst/port.h	35;"	d
PR_END_EXTERN_C	tst/port.h	36;"	d
RX_STATE_ERROR	modbcd/rtu/mbrtu.h	/^	RX_STATE_ERROR,$/;"	e	enum:__anon1
RX_STATE_IDLE	modbcd/rtu/mbrtu.h	/^	RX_STATE_IDLE,$/;"	e	enum:__anon1
RX_STATE_INIT	modbcd/rtu/mbrtu.h	/^	RX_STATE_INIT,$/;"	e	enum:__anon1
RX_STATE_RCV	modbcd/rtu/mbrtu.h	/^	RX_STATE_RCV,$/;"	e	enum:__anon1
SHORT	tst/port.h	/^typedef short									SHORT;$/;"	t
TARGET	tst/Makefile	/^TARGET 		= $(PROJECT)_$(MJR_VER)$/;"	m
TIMEOUT	modbcd/rtu/mbrtu.c	/^static UCHAR TIMEOUT;$/;"	v	file:
TRUE	tst/port.h	51;"	d
UCHAR	tst/port.h	/^typedef unsigned char							UCHAR;$/;"	t
ULONG	tst/port.h	/^typedef unsigned long							ULONG;$/;"	t
USHORT	tst/port.h	/^typedef unsigned short							USHORT;$/;"	t
_MBCRC_H__	modbcd/util/mbcrc.h	11;"	d
_MBOX_H__	modbcd/util/mbox.h	10;"	d
_MBRTU_H__	modbcd/rtu/mbrtu.h	9;"	d
_MB_ASCII_ENABLED	tst/port.h	66;"	d
_MB_ASCII_TIMEOUT_SEC	tst/port.h	71;"	d
_MB_ASCII_TIMEOUT_WAIT_BEFORE_SEND_MS	tst/port.h	72;"	d
_MB_COILS_RD_ADDR_START	tst/port.h	99;"	d
_MB_COILS_RD_QUANTITY	tst/port.h	100;"	d
_MB_COILS_WR_ADDR_START	tst/port.h	101;"	d
_MB_COILS_WR_QUANTITY	tst/port.h	102;"	d
_MB_DISC_RD_ADDR_START	tst/port.h	103;"	d
_MB_DISC_RD_QUANTITY	tst/port.h	104;"	d
_MB_FUNC_HANDLERS_MAX	tst/port.h	75;"	d
_MB_FUNC_OTHER_REP_SLAVEID_BUF	tst/port.h	76;"	d
_MB_FUNC_OTHER_REP_SLAVEID_ENABLED	tst/port.h	79;"	d
_MB_FUNC_READWRITE_HOLDING_ENABLED	tst/port.h	88;"	d
_MB_FUNC_READ_COILS_ENABLED	tst/port.h	84;"	d
_MB_FUNC_READ_DISCRETE_INPUTS_ENABLED	tst/port.h	87;"	d
_MB_FUNC_READ_HOLDING_ENABLED	tst/port.h	81;"	d
_MB_FUNC_READ_INPUT_ENABLED	tst/port.h	80;"	d
_MB_FUNC_WRITE_COIL_ENABLED	tst/port.h	85;"	d
_MB_FUNC_WRITE_HOLDING_ENABLED	tst/port.h	82;"	d
_MB_FUNC_WRITE_MULTIPLE_COILS_ENABLED	tst/port.h	86;"	d
_MB_FUNC_WRITE_MULTIPLE_HOLDING_ENABLED	tst/port.h	83;"	d
_MB_HOLD_RD_ADDR_START	tst/port.h	105;"	d
_MB_HOLD_RD_QUANTITY	tst/port.h	106;"	d
_MB_HOLD_WR_ADDR_START	tst/port.h	107;"	d
_MB_HOLD_WR_QUANTITY	tst/port.h	108;"	d
_MB_REG_INPUT_ADDR_START	tst/port.h	97;"	d
_MB_REG_INPUT_QUANTITY	tst/port.h	98;"	d
_MB_RTU_ENABLED	tst/port.h	67;"	d
_MB_TCP_ENABLED	tst/port.h	68;"	d
_MODBCD_H__	modbcd/modbcd.h	10;"	d
_OSMboxAccept	modbcd/util/mbox.c	/^void *_OSMboxAccept(struct _os_mbox *mbox)$/;"	f
_OSMboxPost	modbcd/util/mbox.c	/^void _OSMboxPost(struct _os_mbox *mbox, void *msg) $/;"	f
_OS_EVENT	modbcd/util/mbox.h	/^typedef struct _os_mbox _OS_EVENT;$/;"	t	typeref:struct:_os_mbox
_PORT_H__	tst/port.h	11;"	d
_SREG	tst/port.c	/^static UCHAR	_SREG;	\/**< For Enter & Exit critical *\/$/;"	v	file:
_os_mbox	modbcd/util/mbox.h	/^struct _os_mbox {$/;"	s
assert	tst/port.h	40;"	d
aucCRCHi	modbcd/util/mbcrc.c	/^static const UCHAR aucCRCHi[] = {$/;"	v	file:
aucCRCHi	tst/mbcrc.c	/^static const PROGMEM UCHAR aucCRCHi[] = {$/;"	v	file:
aucCRCLo	modbcd/util/mbcrc.c	/^static const UCHAR aucCRCLo[] = {$/;"	v	file:
aucCRCLo	tst/mbcrc.c	/^static const PROGMEM UCHAR aucCRCLo[] = {$/;"	v	file:
bMBRTUTimerT35Expired	modbcd/rtu/mbrtu.c	/^void bMBRTUTimerT35Expired( void )$/;"	f
eMBRcvState	modbcd/rtu/mbrtu.h	/^} eMBRcvState;$/;"	t	typeref:enum:__anon1
eMBSndState	modbcd/rtu/mbrtu.h	/^} eMBSndState;$/;"	t	typeref:enum:__anon2
eQueuedEvent	tst/event.c	/^static eMBEventType eQueuedEvent;$/;"	v	file:
main	tst/main.c	/^int main(void)$/;"	f
msg	modbcd/util/mbox.h	/^	void *msg;$/;"	m	struct:_os_mbox
sMBMsgBox	modbcd/rtu/mbrtu.c	/^struct _os_mbox sMBMsgBox;$/;"	v	typeref:struct:_os_mbox
usMBCRC16	modbcd/util/mbcrc.c	/^usMBCRC16( UCHAR * pucFrame, USHORT usLen )$/;"	f
usMBCRC16	tst/mbcrc.c	/^usMBCRC16( UCHAR * pucFrame, USHORT usLen )$/;"	f
usTimer3TCNTDelta	tst/timer.c	/^static USHORT   usTimer3TCNTDelta;$/;"	v	file:
vMBPortSerialEnable	tst/serial.c	/^void vMBPortSerialEnable( BOOL xRxEnable, BOOL xTxEnable )$/;"	f
vMBPortTimersDisable	tst/timer.c	/^inline void vMBPortTimersDisable(  )$/;"	f
vMBPortTimersEnable	tst/timer.c	/^inline void vMBPortTimersEnable(  )$/;"	f
xEventInQueue	tst/event.c	/^static BOOL        xEventInQueue;$/;"	v	file:
xMBPortEventGet	tst/event.c	/^BOOL xMBPortEventGet( eMBEventType * eEvent )$/;"	f
xMBPortEventInit	tst/event.c	/^BOOL xMBPortEventInit( void )$/;"	f
xMBPortEventPost	tst/event.c	/^BOOL xMBPortEventPost( eMBEventType eEvent )$/;"	f
xMBPortSerialGetByte	tst/serial.c	/^BOOL xMBPortSerialGetByte( CHAR * pucByte )$/;"	f
xMBPortSerialInit	tst/serial.c	/^BOOL xMBPortSerialInit( UCHAR ucPORT, ULONG ulBaudRate, UCHAR ucDataBits, eMBParity eParity )$/;"	f
xMBPortSerialPutByte	tst/serial.c	/^BOOL xMBPortSerialPutByte( CHAR ucByte )$/;"	f
xMBPortTimersInit	tst/timer.c	/^BOOL xMBPortTimersInit( USHORT usTim1Timerout50us )$/;"	f
